help: Event-handler configuration
end:
	configfile=/tmp/eventwatch.conf
	API="cli-shell-api"

	if [ -f /var/run/eventwatch.pid ]; then
      	    pid=$(cat /var/run/eventwatch.pid);
            sudo kill -KILL $pid;
            while [ -d /proc/$pid ]; do
            	  sleep 1;
            done;
	    sudo rm -f /var/run/eventwatch.pid 2>&1 >/dev/null;
	fi;

	if [ "$COMMIT_ACTION" = "DELETE" ]; then
	   exit 0
	fi

	echo "<?xml version=\"1.0\"?>" > $configfile
	echo "<event-handler>" >> $configfile
	pol_list=$($API listNodes system event-handler policy)
	eval "POLICIES=($pol_list)"

	if [ "$POLICIES" != "" ]; then
	   echo "  <policies>" >> $configfile
	   for p in "${POLICIES[@]}";
	   do
	      echo "    <policy name=\"$p\">" >> $configfile
	      event_list=$($API listNodes system event-handler policy $p event)
              eval "EVENT=($event_list)"
	      for e in "${EVENT[@]}";
	      do
	         echo "      <event name=\"$e\">" >> $configfile
		 pattern_list=$($API returnValues system event-handler policy $p event $e pattern)
        	 eval "PATTERN=($pattern_list)"
		 for pa in "${PATTERN[@]}";
		 do
		    echo "        <pattern>$pa</pattern>" >> $configfile
		 done
		 run=$($API returnValue system event-handler policy $p event $e run)
		 echo "        <run>$run</run>" >> $configfile
		 echo "      </event>" >> $configfile
	      done
	      echo "    </policy>" >> $configfile
	   done
	   echo "  </policies>" >> $configfile
	fi

	feed_list=$($API listNodes system event-handler feed)
        eval "FEEDS=($feed_list)"
	if [ "$FEEDS" != "" ]; then
	   echo "  <feeds>" >> $configfile
	   for f in "${FEEDS[@]}";
	   do
	      preset=$($API returnValue system event-handler feed $f source preset)
	      feedtype=$($API listNodes system event-handler feed $f source custom)
	      eval "FEEDTYPE=($feedtype)"

	      if [ ${FEEDTYPE[*]} ] && [ $preset ]; then
	      	 echo "Cannot define both preset and custom sources"
		 exit 1
	      fi
	      if [ $preset ]; then
	         case $preset in
	      	   syslog)
			source="/var/log/syslog.pipe"
			type="fifo"
			;;
		   *)
			echo "Error, Unknown preset source defined"
			exit 1;;
	         esac
	      fi
	      if [ ${FEEDTYPE[*]} ]; then
	         case ${FEEDTYPE[*]} in
	      	   command)
			source=$($API returnValue system event-handler feed $f source custom command)
			type="command";;
		   named-pipe)
			source=$($API returnValue system event-handler feed $f source custom named-pipe)
			type="fifo";;
		   *)
			echo "Error, command & named-pipe are both configured"
			exit 1;;
	         esac
	      fi
	      policy=$($API returnValue system event-handler feed $f policy)
	      echo "    <feed name=\"$f\" type=\"$type\" source=\"$source\" policy=\"$policy\" />" >> $configfile
	   done
	   echo "  </feeds>" >> $configfile
	fi

	echo "</event-handler>" >> $configfile

	sudo mv $configfile /etc/eventwatchd/eventwatch.conf
	sudo /usr/sbin/eventwatchd.pl 2>&1 >/dev/null
	ewstat=$(tail -n 1 /var/log/messages | grep 'eventwatchd:.*terminating$')
	if [ "$ewstat" ]; then
	   tac /var/log/messages | grep -m 2 eventwatchd: |cut -d " " -f 5-
	   exit 1
	fi;